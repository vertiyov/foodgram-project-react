name: foodgram

on: push

jobs:
  tests:
    name: Testing
    runs-on: ubuntu-latest
    steps:
    - name: Check out the repo
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2

      with:
        python-version: 3.7
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8
        pip install -r ./backend/requirements.txt
    - name: Check flake8
      run: |
        python -m flake8

  build_and_push:
    name: Push Docker Image to DockerHub
    runs-on: ubuntu-latest
    needs: tests
    if: github.ref == 'refs/heads/master'
    steps:
    - name: Check out the repo
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to Docker
      uses: docker/login-action@v1

      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Push to DockerHub
      uses: docker/build-push-action@v2
      with:
        context: backend/
        push: true
        tags: vertiyov/foodgram_backend:latest
        file: backend/Dockerfile

    - name: Push to DockerHub
      uses: docker/build-push-action@v2
      with:
        context: frontend/
        push: true
        tags: vertiyov/foodgram_frontend:latest
        file: frontend/Dockerfile

  deploy:
    name: Deploy Server
    runs-on: ubuntu-latest
    needs: build_and_push
    steps:
      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          script: |
            sudo docker-compose stop
            sudo docker-compose rm -f backend
            sudo docker image rm alice08/foodgram_backend
            sudo docker-compose down
            sudo rm .env
            touch .env
            sudo docker pull vertiyov/foodgram_backend:latest
            sudo docker pull vertiyov/foodgram_frontend:latest
            echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
            echo DB_NAME=${{ secrets.DB_NAME }} >> .env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            echo DB_HOST=${{ secrets.DB_HOST }} >> .env
            echo DB_PORT=${{ secrets.DB_PORT }} >> .env
            sudo systemctl stop nginx
            sudo docker-compose up -d

  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Telegram Message Notify
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: ${{ github.workflow }} успешно выполнен!